<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group6.lmsbackend.mapper.LendMapper">

    <select id="searchMembers" resultType="com.group6.lmsbackend.vo.Mem">
        SELECT memId, memName, memEmail, memPNum
        FROM mem
        <where>
            <choose>
                <when test="category == 'memId'">
                    memId LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="category == 'memName'">
                    memName LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="category == 'memEmail'">
                    memEmail LIKE CONCAT('%', #{keyword}, '%')
                </when>
            </choose>
        </where>
    </select>


    <select id="searchBooks" resultType="com.group6.lmsbackend.vo.Book">
        SELECT bookId, bookTitle, bookWriter, bookCNum, lendNY
        FROM book
        <where>
            <choose>
                <when test="category == 'bookId'">
                    bookId LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="category == 'bookTitle'">
                    bookTitle LIKE CONCAT('%', #{keyword}, '%')
                </when>
                <when test="category == 'bookCNum'">
                    bookCNum LIKE CONCAT('%', #{keyword}, '%')
                </when>
            </choose>
        </where>
    </select>



    <select id="countActiveLoans" resultType="int" parameterType="String">
        SELECT COUNT(*) FROM lendreturn
        WHERE memId = #{memId}
        AND returnNY = 0
    </select>

    <select id="countBookActiveLoan" resultType="int" parameterType="String">
        SELECT COUNT(*) FROM lendreturn
        WHERE bookId = #{bookId}
        AND returnNY = 0
    </select>

    <insert id="insertLend" parameterType="com.group6.lmsbackend.vo.LendReturn">
        INSERT INTO lendreturn (memId, bookId, lendDate, returnDate, returnNY, overNY)
        VALUES (#{memId}, #{bookId}, #{lendDate}, NULL, #{returnNY}, #{overNY})
    </insert>

    <update id="markOverdue" parameterType="java.time.LocalDate">
        UPDATE lendreturn
        SET overNY = 1
        WHERE returnNY = 0
        AND lendDate &lt;= #{threshold}
    </update>

    <update id="updateBookLendStatus" parameterType="String">
        UPDATE book
        SET lendNY = 1
        WHERE bookId = #{bookId}
    </update>


</mapper>
